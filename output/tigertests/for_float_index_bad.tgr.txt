(tigerprogram main let (declarationsegment typedeclarationlist (vardeclarationlist (vardeclaration var (idlist pescado itail) : (type (typeid float)) optionalinit ;) (vardeclarationlist (vardeclaration var (idlist carne itail) : (type (typeid int)) optionalinit ;) vardeclarationlist)) functdeclarationlist) in begin (statseq (stat for pescado := (expr (and (le (me (lesser (greater (noteq (equal (minus (plus (div (mult (exp (yeet (consta 1.4))))))))))))))) to (expr (and (le (me (lesser (greater (noteq (equal (minus (plus (div (mult (exp (yeet (consta 100.0))))))))))))))) do (statseq (stat (lvalue carne lvaluetail) := (more ltail (expr (and (le (me (lesser (greater (noteq (equal (minus (plus (div (mult (exp (yeet (lvalue pescado lvaluetail))))))))))))))) ;)) stail) enddo ;) stail) end)
