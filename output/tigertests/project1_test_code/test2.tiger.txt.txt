(tigerprogram main let (declarationsegment typedeclarationlist vardeclarationlist (functdeclarationlist (functdeclaration function print ( (paramlist (param n : (type (typeid int))) paramlisttail) ) rettype begin (statseq (stat printi ( (exprlist (expr (and (le (me (lesser (greater (noteq (equal (minus (plus (div (mult (exp (yeet (lvalue n lvaluetail))))))))))))))) exprlisttail) )) (stail ;)) end ;) functdeclarationlist)) in begin (statseq (stat print ( (exprlist (expr (and (le (me (lesser (greater (noteq (equal (minus (plus (div (mult (exp (yeet (consta 5))))))))))))))) exprlisttail) )) (stail ;)) end)
(tigerprogram main let (declarationsegment typedeclarationlist vardeclarationlist (functdeclarationlist (functdeclaration function print ( (paramlist (param n : (type (typeid int))) paramlisttail) ) rettype begin (statseq (stat printi ( (exprlist (expr (and (le (me (lesser (greater (noteq (equal (minus (plus (div (mult (exp (yeet (lvalue n lvaluetail))))))))))))))) exprlisttail) )) (stail ;)) end ;) functdeclarationlist)) in begin (statseq (stat print ( (exprlist (expr (and (le (me (lesser (greater (noteq (equal (minus (plus (div (mult (exp (yeet (consta 5))))))))))))))) exprlisttail) )) (stail ;)) end)
